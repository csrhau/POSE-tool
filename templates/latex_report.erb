<% require 'to_latex' %>
\documentclass[a4paper]{article}
\usepackage{url} 
\usepackage{booktabs}
\usepackage{geometry}
\usepackage{graphicx}
\usepackage[parfill]{parskip}
\usepackage{pgfplots}
\pgfplotsset{compat=newest}

\title{POSE Report: <%= model.name.to_latex %>}
\author{}
\date{}

<% time_range = model.E.time - model.A.time %>
<% xmin = model.A.time - 0.15 * time_range %>
<% xmax = model.E.time + 0.15 * time_range %>
<% energy_range = model.B.energy - model.C.energy %>
<% ymin = model.C.energy - 0.35 * energy_range %>
<% ymax = model.B.energy + 0.50 * energy_range %>

\begin{document}
\maketitle
\begin{figure}[ht]
\begin{tikzpicture}
  \providecommand{\plotwidth}{\linewidth}
  \begin{axis}[
    axis on top,
    axis x line=bottom,
    axis y line=left,
  	xlabel={Runtime \emph{(s)}},
    ylabel={Energy \emph{(J)}},    
    xmin=<%= sprintf('%.0f', xmin.floor) %>, xmax=<%= sprintf('%.0f', xmax.ceil) %>,
    ymin=<%= sprintf('%.0f', ymin.floor) %>, ymax=<%= sprintf('%.0f', ymax.ceil) %>,
    width=\plotwidth,
    height=20em,
    legend columns=3,
    legend to name=minimd:legend,
    legend style={/tikz/every even column/.append style={column sep=0.2cm}} % space out columns a bit
    ]

    %% Model Parameters %%
    \pgfmathsetmacro{\baselinepower}{<%= model.min_power %>}
    \pgfmathsetmacro{\rooflinepower}{<%= model.max_power %>}
    \pgfmathsetmacro{\codepower}{<%= model.code.power %>} 
    \pgfmathsetmacro{\codetime}{<%= model.code.time %>}
    \pgfmathsetmacro{\codeenergy}{<%= model.code.energy %>}
    \pgfmathsetmacro{\energyexp}{<%= model.energy_exp %>}
    \pgfmathsetmacro{\timeexp}{<%= model.delay_exp %>}

    % Sadly, pgfplots sucks too much to calculate cube roots
    % These values are calculated with a ruby script in tools
    \pgfmathsetmacro{\blnodex}{<%= model.C.time %>}
    \pgfmathsetmacro{\brnodex}{<%= model.E.time %>}
    \pgfmathsetmacro{\trnodex}{<%= model.B.time %>}
    \pgfmathsetmacro{\tlnodex}{<%= model.A.time %>}

    %% Intermezzo Values %%
    \pgfmathsetmacro{\brnodey}{\brnodex * \baselinepower}
    \pgfmathsetmacro{\blnodey}{\blnodex * \baselinepower}
    \pgfmathsetmacro{\tlnodey}{\tlnodex * \rooflinepower}
    \pgfmathsetmacro{\trnodey}{\trnodex * \rooflinepower}
    \pgfmathsetmacro{\baselineenergy}{\baselinepower * \codetime}

    % arguments: code power, code time, x, n 
    \pgfmathdeclarefunction{metricbound}{4}{%
      \pgfmathparse{((#1 * #2^(#4 + 1)) / #3^#4)}%
    }
    \pgfmathdeclarefunction{definitionbound}{4}{%
      \pgfmathparse{((#1 / #2^(#4 + 1)) * #3^(#4 + 2))}%
    }
 
    % BETA ROOFLINE BOUND 
    \addplot[color=red, domain=\pgfkeysvalueof{/pgfplots/xmin}:\pgfkeysvalueof{/pgfplots/xmax}] {\rooflinepower * x};
    \addlegendentry{$P_{max}$ Bound}

    % ALPHA BASELINE BOUND 
    \addplot[color=green, domain=\pgfkeysvalueof{/pgfplots/xmin}:\pgfkeysvalueof{/pgfplots/xmax}] {\baselinepower * x};
    \addlegendentry{$P_{min}$ Bound} 

    \addplot[color=orange, domain=\trnodex:\brnodex] { metricbound(\codepower, \codetime, x, \timeexp)};
    \addlegendentry{Optimisation Bound}

    \addplot[color=blue!80, domain=\blnodex:\codetime] { definitionbound(\codepower, \codetime, x, \timeexp)};
    \addlegendentry{Contribution Bound}

    \addplot[color=orange, dashed, domain=\tlnodex:\blnodex] {metricbound(\baselinepower, \blnodex, x, \timeexp)};
    \addlegendentry{Optimisation Limit}

    % Constant Time (Vertical) dotted line
    \draw[densely dotted] ({axis cs:\codetime,\baselineenergy}) -- ({axis cs:\codetime,\codeenergy});

    \node[circle,fill,inner sep=2pt] at (axis cs:\codetime,\codeenergy) {};
    \node[above right] at (axis cs:\codetime,\codeenergy) {$\theta$};
    
    \node [above] at ({axis cs:\tlnodex, \tlnodey}) {A};
    \node [above] at ({axis cs:\trnodex, \trnodey}) {B};
    \node [below] at ({axis cs:\blnodex, \blnodey}) {C};
    \node [below] at ({axis cs:\codetime,\baselineenergy}) {D};
    \node [below] at ({axis cs:\brnodex, \brnodey}) {E};
 \end{axis}
\end{tikzpicture}
\end{figure}

\section*{Summary}
\begin{table}
\centering
\begin{tabular}{cccc} \toprule
POSE Point & Runtime (s) & Energy (J) & $E^<%= sprintf '%g', model.energy_exp %>t^<%= sprintf '%g', model.delay_exp%>$ \\
\midrule
$\theta$ & <%= sprintf( '%.2f', model.code.time) %> & <%= sprintf( '%.2f', model.code.energy) %> & <%=sprintf( '%.0f', model.metric_value(model.code)) %> \\
  A & <%= sprintf( '%.2f', model.A.time) %> & <%= sprintf( '%.2f', model.A.energy) %> & <%=sprintf( '%.0f', model.metric_value(model.A)) %> \\
  B & <%= sprintf( '%.2f', model.B.time) %> & <%= sprintf( '%.2f', model.B.energy) %> & <%=sprintf( '%.0f', model.metric_value(model.B)) %> \\
  C & <%= sprintf( '%.2f', model.C.time) %> & <%= sprintf( '%.2f', model.C.energy) %> & <%=sprintf( '%.0f', model.metric_value(model.C)) %> \\
  D & <%= sprintf( '%.2f', model.D.time) %> & <%= sprintf( '%.2f', model.D.energy) %> & <%=sprintf( '%.0f', model.metric_value(model.D)) %> \\
  E & <%= sprintf( '%.2f', model.E.time) %> & <%= sprintf( '%.2f', model.E.energy) %> & <%=sprintf( '%.0f', model.metric_value(model.E)) %> \\
\bottomrule
\end{tabular}
\end{table}

\begin{itemize}
  \item At most <%= sprintf('%.2f', model.code.energy - model.D.energy) %>J can be saved by reducing power consumption.
  \item Maximum slowdown from energy optimisation is <%= sprintf('%.2f', model.E.time - model.code.time) %>s
  <% c_metric = model.metric_value(model.C) %>
  <% t_metric = model.metric_value(model.code) %>
  \item Lowest $E^<%= sprintf('%.0f', model.energy_exp) %>t^<%= sprintf('%0.f', model.delay_exp) %>$ value within POSE:  <%=sprintf( '%.0f', c_metric) %>
  \begin{itemize}
  \item Corresponds to a <%= sprintf('%.2f', 100 * (t_metric - c_metric) / t_metric) %>\% reduction
  \end{itemize}
  <% b_time = model.B.time %>
  <% a_time = model.A.time %>
  <% t_time = model.code.time %>
  \item A speedup of <%= sprintf('%.2f', t_time - b_time) %>s, or <%= sprintf('%.2f', (t_time / b_time)) %>x, strictly outperforms $\theta$
  \item A speedup of <%= sprintf('%.2f', t_time - a_time) %>s, or <%= sprintf('%.2f', (t_time / a_time)) %>x, strictly outperform any power-optimized version of $\theta$
\end{itemize}

\end{document} 
